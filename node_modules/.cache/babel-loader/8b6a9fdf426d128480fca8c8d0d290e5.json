{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Manu/0_BBK_BOOTCAMP/22_proyecto_k/cliente_k/src/components/landing/crudProductos/read/ReadProducts.js\",\n    _s = $RefreshSig$();\n\n// EXPLICANDO ESTE CÓDIGO.\n// La función principal del componente es renderizar las miniaturas de todos los productos por pantalla para que el usuario pueda elegir entre ver cada producto, modificarlo o eliminarlo.\n//Los botones de modificar y eliminar son componentes hijo que importamos dentro de este componente padre\n//Tengo dos variables de estado:\n//data, setData para para sacar un array que renderize todos los productos y nombre, setNombre  para renderizar los datos del producto que clicka el usuario, (por defecto pinta en pantalla \"COMBINAISON LADYSKAF\")\n// En la etiqueta imagen en el onClick tengo una función sin nombre que hace un setNombre del producto elegido para poder pasarlo por props a la función MostrarProducto.js que es la que se encarga de hacer el fetch al servidor que recibirá el nombre del producto elegido en un app.get por parámetros.\nimport { useState, useEffect } from \"react\";\nimport MostrarProducto from \"./MostrarProducto\";\n\nconst ReadProducts = () => {\n  _s();\n\n  // Variable de estado para renderizar todos los productos\n  const [data, setData] = useState([]); // Variable de estado que renderiza los datos del producto que clicka el usuario\n  // Por defecto \"COMBINAISON LADYBUST\"\n\n  const [nombre, setNombre] = useState(\"COMBINAISON LADYBUST\"); //Variable de estado que sirve para renderizar automáticamente el navegador cuando se elimina un producto o se modifica.\n  //Pasamos boolean dentro de useEffect en la linea 30 y creo la función en la línea 32\n  //Por últimno la paso por props en la línea 60 a MostrarProducto.js\n\n  const [boolean, setBoolean] = useState(false);\n  useEffect(() => {\n    fetch(\"http://localhost:3001/productos/\").then(res => res.json()).then(data => setData(data));\n  }, [boolean]);\n\n  function handleBoolean() {\n    setBoolean(!boolean);\n  }\n\n  const mostrarProductos = data.map(producto => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cont_pro_admin\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productos1\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: producto.imagenes[0],\n          alt: producto.nombre,\n          className: \"imagen\" //Función con el setNombre que actualiza nombre, por el que clicka el usuario\n          ,\n          onClick: () => {\n            setNombre(producto.nombre);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: producto.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, producto.nombre, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [mostrarProductos, /*#__PURE__*/_jsxDEV(MostrarProducto, {\n      nombre: nombre,\n      handleBoolean: handleBoolean\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReadProducts, \"7xteEUnKiV6mFvYGEswBuUabaWk=\");\n\n_c = ReadProducts;\nexport default ReadProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadProducts\");","map":{"version":3,"sources":["/Users/Manu/0_BBK_BOOTCAMP/22_proyecto_k/cliente_k/src/components/landing/crudProductos/read/ReadProducts.js"],"names":["useState","useEffect","MostrarProducto","ReadProducts","data","setData","nombre","setNombre","boolean","setBoolean","fetch","then","res","json","handleBoolean","mostrarProductos","map","producto","imagenes"],"mappings":";;;;;AAAA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC,CAFyB,CAGzB;AACA;;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,sBAAD,CAApC,CALyB,CAMzB;AACA;AACA;;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAC,kCAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESP,IAAD,IAAUC,OAAO,CAACD,IAAD,CAFzB;AAGD,GAJQ,EAIN,CAACI,OAAD,CAJM,CAAT;;AAMA,WAASM,aAAT,GAAyB;AACvBL,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD;;AAED,QAAMO,gBAAgB,GAAGX,IAAI,CAACY,GAAL,CAAUC,QAAD,IAAc;AAC9C,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE;AAA2B,QAAA,SAAS,EAAC,YAArC;AAAA,gCACE;AACE,UAAA,GAAG,EAAEA,QAAQ,CAACC,QAAT,CAAkB,CAAlB,CADP;AAEE,UAAA,GAAG,EAAED,QAAQ,CAACX,MAFhB;AAGE,UAAA,SAAS,EAAC,QAHZ,CAIE;AAJF;AAKE,UAAA,OAAO,EAAE,MAAM;AACbC,YAAAA,SAAS,CAACU,QAAQ,CAACX,MAAV,CAAT;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAA,oBAAKW,QAAQ,CAACX;AAAd;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA,SAAUW,QAAQ,CAACX,MAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD,GAjBwB,CAAzB;AAmBA,sBACE;AAAA,eAEGS,gBAFH,eAIE,QAAC,eAAD;AAAiB,MAAA,MAAM,EAAET,MAAzB;AAAiC,MAAA,aAAa,EAAEQ;AAAhD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAhDD;;GAAMX,Y;;KAAAA,Y;AAkDN,eAAeA,YAAf","sourcesContent":["// EXPLICANDO ESTE CÓDIGO.\n\n// La función principal del componente es renderizar las miniaturas de todos los productos por pantalla para que el usuario pueda elegir entre ver cada producto, modificarlo o eliminarlo.\n\n//Los botones de modificar y eliminar son componentes hijo que importamos dentro de este componente padre\n\n//Tengo dos variables de estado:\n//data, setData para para sacar un array que renderize todos los productos y nombre, setNombre  para renderizar los datos del producto que clicka el usuario, (por defecto pinta en pantalla \"COMBINAISON LADYSKAF\")\n\n// En la etiqueta imagen en el onClick tengo una función sin nombre que hace un setNombre del producto elegido para poder pasarlo por props a la función MostrarProducto.js que es la que se encarga de hacer el fetch al servidor que recibirá el nombre del producto elegido en un app.get por parámetros.\n\nimport { useState, useEffect } from \"react\";\nimport MostrarProducto from \"./MostrarProducto\";\n\nconst ReadProducts = () => {\n  // Variable de estado para renderizar todos los productos\n  const [data, setData] = useState([]);\n  // Variable de estado que renderiza los datos del producto que clicka el usuario\n  // Por defecto \"COMBINAISON LADYBUST\"\n  const [nombre, setNombre] = useState(\"COMBINAISON LADYBUST\");\n  //Variable de estado que sirve para renderizar automáticamente el navegador cuando se elimina un producto o se modifica.\n  //Pasamos boolean dentro de useEffect en la linea 30 y creo la función en la línea 32\n  //Por últimno la paso por props en la línea 60 a MostrarProducto.js\n  const [boolean, setBoolean] = useState(false);\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/productos/\")\n      .then((res) => res.json())\n      .then((data) => setData(data));\n  }, [boolean]);\n\n  function handleBoolean() {\n    setBoolean(!boolean);\n  }\n\n  const mostrarProductos = data.map((producto) => {\n    return (\n      <div className=\"cont_pro_admin\">\n        <div key={producto.nombre} className=\"productos1\">\n          <img\n            src={producto.imagenes[0]}\n            alt={producto.nombre}\n            className=\"imagen\"\n            //Función con el setNombre que actualiza nombre, por el que clicka el usuario\n            onClick={() => {\n              setNombre(producto.nombre);\n            }}\n          />\n          <h2>{producto.nombre}</h2>\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div>\n      {/* {mostrarProductos} renderiza la primera parte de la página - Las miniaturas de los productos */}\n      {mostrarProductos}\n      {/* Y esta línea renderiza el producto que selecciona el usuario - (Por defecto \"COMBINAISON LADYBUST\") y pasa por props a MostrarProducto.js el que selecciona el usuario */}\n      <MostrarProducto nombre={nombre} handleBoolean={handleBoolean} />\n    </div>\n  );\n};\n\nexport default ReadProducts;\n"]},"metadata":{},"sourceType":"module"}